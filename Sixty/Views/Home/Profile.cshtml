@model Sixty.ViewModels.UserProfileViewModel
@using Sixty.Helpers
@using Sixty.Extensions

@{
    ViewBag.Title = "Профиль пользователя";
}

@if (string.IsNullOrEmpty(Model.Name))
{
    <h3>Заполните свой профиль</h3>
}

@using (Html.BeginForm("Profile", "Home", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelForRequired(m => m.Email, "", "col-sm-3 control-label")
        <div class="col-sm-9">
            @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "hidden" } })
            <p class="help-block italic">@Model.Email</p>
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelForRequired(m => m.Name, "", "col-sm-3 control-label")
        <div class="col-sm-9">
            @Html.EditorFor(m => m.Name)
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelForRequired(m => m.Surname, "", "col-sm-3 control-label")
        <div class="col-sm-9">
            @Html.EditorFor(m => m.Surname)
            @Html.ValidationMessageFor(m => m.Surname)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelForRequired(m => m.BirthDate, "", "col-sm-3 control-label")
        <div class="col-sm-9">
            @Html.EditorFor(m => m.BirthDate)
            @Html.ValidationMessageFor(m => m.BirthDate)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Photo, new { @class = "col-sm-3 control-label" })
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.Photo, new { type = "file" })
            @Html.ValidationMessageFor(m => m.Photo)
        </div>
    </div>
    <button type="submit" class="btn btn-default">@TR.T("Сохранить изменения")</button>
}
